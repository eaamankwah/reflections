What happens when you initialize a repository? Why do you need to do it?
Answer: A repository is initialized so that the hidden .git file can be created
 to create a new git repository. This is needed to convert an existing,
 not versioned project to a git repository or initialized a new, empty repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
Answer: A file in the Git directory that stores information about what will go
into your next commit. You can think of the staging area
as a prep table where Git will take the next commit. Files on the Staging Index
are poised to be added to the repository. Working directory contains all the
files  that are in the staging area and other files that will not be committed
into a repository.

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
